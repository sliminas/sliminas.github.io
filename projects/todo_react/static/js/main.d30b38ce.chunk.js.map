{"version":3,"sources":["reportWebVitals.js","components/Button/Button.js","components/TodoForm/TodoForm.js","components/Filters/Filters.js","components/Todo/Todo.js","components/TodoList/TodoList.js","TodoApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","type","className","class","onClick","disabled","text","TodoForm","onInputChange","e","setState","name","target","value","onSubmit","preventDefault","addTodo","state","id","nanoid","htmlFor","autoComplete","onChange","this","trim","length","React","Filters","filter","setFilter","Todo","changeName","todo","updateTodo","editForm","defaultChecked","completed","toggleTodo","removeTodo","defaultValue","TodoList","todos","aria-labelledby","map","TodoApp","filterTodos","index","indexOf","el","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d30b38ce.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function Button(props) {\n  return (\n    <button type=\"button\" className={props.class + ' btn'}\n            onClick={props.onClick}\n            disabled={props.disabled}\n    >\n      {props.text}\n    </button>\n  );\n}\n\nexport default Button;\n","import * as React from \"react\"\nimport {nanoid} from \"nanoid\"\nimport Button from \"../Button/Button\"\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\" }\n  }\n\n  onInputChange = (e) => this.setState({ name: e.target.value })\n  onSubmit = (e) => {\n    e.preventDefault()\n    this.props.addTodo({ name: this.state.name, id: nanoid() })\n  }\n\n  render() {\n    return (\n      <form>\n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-todo-input\" className=\"label--lg\">\n            What needs to be done?\n          </label>\n        </h2>\n        <input\n          type=\"text\"\n          id=\"new-todo-input\"\n          className=\"input input--lg\"\n          name=\"text\"\n          autoComplete=\"off\"\n          onChange={this.onInputChange}\n        />\n\n        <Button text={`Add ${this.state.name}`}\n                onClick={this.onSubmit}\n                class={'btn--primary btn--lg'}\n                disabled={this.state.name.trim().length === 0}\n        />\n      </form>\n    )\n  }\n}\n\nexport default TodoForm;\n","import Button from \"../Button/Button\"\n\nfunction Filters(props) {\n  return (\n    <div className=\"filters btn-group stack-exception\">\n      <Button class={`btn--filter ${props.filter === null && 'btn--active'}`}\n              onClick={() => props.setFilter(null)}\n              text=\"All\"/>\n      <Button class={`btn--filter ${props.filter === 'active' && 'btn--active'}`}\n              onClick={() => props.setFilter('active')}\n              text=\"Active\"/>\n      <Button class={`btn--filter ${props.filter === 'completed' && 'btn--active'}`}\n              onClick={() => props.setFilter('completed')}\n              text=\"Completed\"/>\n    </div>\n  );\n}\n\nexport default Filters;\n","import Button from \"../Button/Button\"\nimport * as React from \"react\"\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editForm: false, todo: props.todo }\n  }\n\n  changeName = (e) => {\n    let todo = { ...this.state.todo, name: e.target.value }\n\n    this.setState({ todo: todo })\n    this.props.updateTodo(todo)\n  }\n\n  render() {\n    const props = this.props\n    const todo = this.state.todo\n\n    return (\n      <li className=\"todo stack-small\">\n        <div className=\"c-cb\">\n          <input id=\"todo-0\" type=\"checkbox\"\n                 defaultChecked={todo.completed}\n                 onChange={() => props.toggleTodo(todo)}/>\n\n          <label className=\"todo-label\" htmlFor=\"todo-0\">\n            {todo.name}\n          </label>\n        </div>\n\n        <div className=\"btn-group\">\n          <Button text=\"Edit\"\n                  onClick={() => this.setState({editForm: !this.state.editForm})}\n                  class={this.state.editForm && 'btn--active'}\n          />\n          <Button text=\"Delete\" class=\"btn--danger\" onClick={() => {\n            props.removeTodo(todo.id)\n          }}/>\n        </div>\n\n        {this.state.editForm && <form className=\"edit-todo\">\n          <input\n            type=\"text\"\n            id=\"edit-todo-input\"\n            className=\"input\"\n            name=\"text\"\n            defaultValue={todo.name}\n            autoComplete=\"off\"\n            onChange={this.changeName}\n          />\n        </form>}\n      </li>\n    );\n  }\n}\n\n// function Todo(props) {\n// }\n\nexport default Todo;\n","import Todo from \"../Todo/Todo\"\n\nfunction TodoList(props) {\n  return (\n    <div>\n      <h2 id=\"list-heading\">\n        {props.todos.length} tasks remaining\n      </h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {props.todos.map(todo => <Todo todo={todo}\n                                       key={todo.id}\n                                       removeTodo={props.removeTodo}\n                                       toggleTodo={props.toggleTodo}\n                                       updateTodo={props.updateTodo}\n          />\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import TodoForm from \"./components/TodoForm/TodoForm\"\nimport Filters from \"./components/Filters/Filters\"\nimport TodoList from \"./components/TodoList/TodoList\"\nimport React from \"react\";\nimport {nanoid} from \"nanoid\"\n\n// As a user, I can\n//\n// * read a list of tasks.\n// * add a task using the mouse or keyboard.\n// * mark any task as completed, using the mouse or keyboard.\n// * delete any task, using the mouse or keyboard.\n// * edit any task, using the mouse or keyboard.\n// * view a specific subset of tasks: All tasks, only the active task, or only the completed tasks.\n\n/**\n * firma insolvent?\n * neue firma?\n *  homeoffice 2-3 tage\n *  beide in hamburg?\n *\n * jeden tag grundstück gesucht\n * massiv oder reihenhaus\n *\n * unser haus region?\n * -> berlin, ~500k in berlin außerhalb einfacher\n */\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [\n        { id: nanoid(), completed: false, name: \"eat\" },\n        { id: nanoid(), completed: false, name: \"sleep\" },\n        { id: nanoid(), completed: false, name: \"repeat\" },\n      ],\n      filter: null\n    }\n  }\n\n  addTodo = todo => {\n    this.setState(\n      { todos: [...this.state.todos, todo] }\n    )\n  }\n\n  removeTodo = id => {\n    this.setState(\n      { todos: this.state.todos.filter(todo => todo.id !== id) }\n    )\n  }\n\n  setFilter = (filter) => {\n    this.setState({ filter: filter })\n  }\n\n  filterTodos = () => {\n    const todos = this.state.todos\n    const filter = this.state.filter\n    if (filter === null) return todos\n\n    return this.state.todos.filter(todo => todo.completed === (filter === 'completed'))\n  }\n\n  toggleTodo = todo => {\n    todo.completed = !todo.completed\n    const todos = this.state.todos\n    const index = todos.indexOf(el => el.id === todo.id)\n    todos[index] = todo\n\n    this.setState({todos: todos})\n  }\n\n  updateTodo = (todo) => {\n    this.setState({todos: [...this.state.todos.filter(el => el.id !== todo.id), todo]})\n  }\n\n  render() {\n    return (\n      <div className=\"todoapp stack-large\">\n        <h1>TodoMatic</h1>\n\n        <TodoForm addTodo={this.addTodo}/>\n        <Filters setFilter={this.setFilter} filter={this.state.filter}/>\n        <TodoList todos={this.filterTodos()}\n                  removeTodo={this.removeTodo}\n                  toggleTodo={this.toggleTodo}\n                  updateTodo={this.updateTodo}/>\n      </div>\n    )\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport TodoApp from \"./TodoApp\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}